<!-- 
1 # Citation for the following files: transactionCars.hbs
2 # Date: 02/13/2025
3 # Templated from bsg_HTML_UI
4 # The main things used from the template was the functionality of the buttons, and the 
#  table layout, with a little difference in functionality, however the skeleton is similar
#  to the template. What is original is the design thought and process of creating the table 
#  with a CSS file in mind to make styling easier for us. And the topic of ideas we have given
#  the skeleton making the UI fit towards our project idea and topic.
5 # Source : https://canvas.oregonstate.edu/courses/1987790/files/108859901/download?download_frd=1
-->

<html>
<html lang="en">
<head>
        <meta charset="UTF-8">
        <link rel="stylesheet" href="/css/main.css">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Rare Car Imports</title>
    </head>
<body>
    <header>
        <h1>Rare Car Imports</h1>
    </header>
    <nav>
            <a href="/">Home</a>
            <a href="/diagram">Schema Diagram</a>
            <a href="/cars">Cars</a>
            <a href="/customers">Customers</a>
            <a href="/locations">Locations</a>
            <a href="/transactions">Transactions</a>
            <a href="/transactionCars">Transactions Details</a>
    </nav>
        <main>
            <h2>Transaction Details</h2>
            <br>
            <table id="transactionsCars-table">
                <thead>
                    <tr>
                        <th>Edit</th>
                        <th>Delete</th>
                        <th>Transaction ID</th>
                        <th>Sales ID</th>
                        <th>Make</th>
                        <th>Model</th>
                        <th>Year</th>
                        <th>Sale Price</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each data}}
                    <tr data-value={{this.transactionCarID}}>
                        <td><button onclick="window.location.href='/updateTransactionCar'">Edit</button></td> {{! edit button routes to updateTransactionCar.hbs}}
                        <td><button onclick="window.location.href='/deleteTransactionCar'">Delete</button></td> {{! delete button routes to deleteTransactionCar.hbs }}
                        <td>{{this.transactionCarID}}</td>
                        <td>{{this.salesID}}</td>
                        <td>{{this.make}}</td>
                        <td>{{this.model}}</td>
                        <td>{{this.modelYear}}</td>
                        <td>{{this.salePrice}}</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>  
    </main>
    <main id="insert">
            <form method="POST" id="addTransactionDetail" action="/add-transactionCar-form"> {{! form at the bottom of the page to add a Detail }}
                <legend><strong>Add Transaction Detail</strong></legend>
                <fieldset class="fields">
                    <label> Sale: </label> 
                    <select name="input-salesID" id="input-salesID-ajax">     {{! handlebars dropdown that is dynamically filled with data }}
                    <option value="">Select a Transaction</option>
                    {{#each transactions}}
                    <option value="{{this.salesID}}">{{this.transactionDate}} {{this.customerName}}</option>     {{! displays the name of customer and date}}
                    {{/each}}
                    </select>
                    <br>
                    <label> Car: </label> 
                    <select name="input-car" id="input-car-ajax">     {{! handlebars dropdown that is dynamically filled with data }}
                    <option value="">Select a Car</option>
                    {{#each cars}}
                    <option value="{{this.carID}}">{{this.Make}} {{this.Model}}</option>     {{! displays the name of car}}
                    {{/each}}
                    </select>
                    <label> Sale Price: </label> <input type="number" name="input-salePrice" placeholder="Enter Here..." required>
                    <br>
                </fieldset>
                <br>
                <input class="btn" type="submit" id="submitTransactionDetail" value="Add Transaction Detail">  {{! onClick it POSTs the form and the app.js route gets the data }}      
            </form>
        </main>
        <footer>
            <p>&copy; 2025 Leo Zimmer / YuPheng Xiong</p>
        </footer>
       <script>
        console.log("Debugging script loaded!"); // Add this line to confirm the script is running
         document.getElementById('addTransactionDetail').addEventListener('submit', function(event) {
        const formData = new FormData(event.target);
        for (let [key, value] of formData.entries()) {
            console.log(`${key}: ${value}`);
        }
        // Uncomment to submit the form after debugging
        // event.target.submit();
    });
    </script>
    </body>
</html>
